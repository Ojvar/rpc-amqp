0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.28
3 info using node@v0.10.36
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/mexxik/.npm/3a52ce78-.lock
10 verbose tar pack [ '/Users/mexxik/.npm/rpc-amqp/0.0.4/package.tgz', '.' ]
11 verbose tarball /Users/mexxik/.npm/rpc-amqp/0.0.4/package.tgz
12 verbose folder .
13 info prepublish rpc-amqp@0.0.4
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/mexxik/.npm/1f1177db-tar.lock
16 silly lockFile e6342318-k-npm-rpc-amqp-0-0-4-package-tgz tar:///Users/mexxik/.npm/rpc-amqp/0.0.4/package.tgz
17 verbose lock tar:///Users/mexxik/.npm/rpc-amqp/0.0.4/package.tgz /Users/mexxik/.npm/e6342318-k-npm-rpc-amqp-0-0-4-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile e6342318-k-npm-rpc-amqp-0-0-4-package-tgz tar:///Users/mexxik/.npm/rpc-amqp/0.0.4/package.tgz
21 silly lockFile e6342318-k-npm-rpc-amqp-0-0-4-package-tgz tar:///Users/mexxik/.npm/rpc-amqp/0.0.4/package.tgz
22 silly lockFile b4cc121a-exxik-npm-rpc-amqp-0-0-4-package /Users/mexxik/.npm/rpc-amqp/0.0.4/package
23 verbose lock /Users/mexxik/.npm/rpc-amqp/0.0.4/package /Users/mexxik/.npm/b4cc121a-exxik-npm-rpc-amqp-0-0-4-package.lock
24 silly lockFile b4cc121a-exxik-npm-rpc-amqp-0-0-4-package /Users/mexxik/.npm/rpc-amqp/0.0.4/package
25 silly lockFile b4cc121a-exxik-npm-rpc-amqp-0-0-4-package /Users/mexxik/.npm/rpc-amqp/0.0.4/package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'rpc-amqp',
28 silly publish   version: '0.0.4',
28 silly publish   description: 'node.js library for cross-application communication via amqp.',
28 silly publish   main: 'index.js',
28 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
28 silly publish   author: '',
28 silly publish   license: 'ISC',
28 silly publish   dependencies:
28 silly publish    { async: '^1.5.2',
28 silly publish      bramqp: '^0.4.0',
28 silly publish      'node-uuid': '^1.4.7',
28 silly publish      nodeunit: '^0.9.1',
28 silly publish      winston: '^2.1.1' },
28 silly publish   readme: '# rpc-amqp\n\nnode.js library for cross-application communication via amqp.\n\n#Setup\n\nInstall the dependency:\n\n`npm install rpc-amqp`\n\nRequire it in your application:\n\n```javascript\nvar RPC = require(\'rpc-amqp\');\n```\n\n\n#Usage\n\nTo make the library working you need to have a default installation of RabbitMQ message broker: https://www.rabbitmq.com/download.html\n\n##Client\n\nCreate a client object to send and receive RPCs (multiple objects could be created within the same scope):\n\n```javascript\nvar client = RPC.create();\n```\n\n##Connection\n\nYou can establish a connection to a default `localhost` with `guest:guest` credentials:\n\n```javascript\nclient.connect();\n```\nOr customize your connection with parameters:\n\n```javascript\nclient.connect({\n    host: \'localhost\',\n    port: 5672,\n    username: \'guest\',\n    password: \'guest\n});\n```\n\n##Ready\n\nWhen the library connects to the broker and makes all preparations it emits `ready` event. At this point you can start registering callbacks and send RPCs:\n\n```javascript\nclient.on(\'ready\', function() {\n    // messages sending and callbacks registration here\n});\n```\n\n##Workflow\n\nThe workflow consists of sending, receiving and returning the result:\n\n- to send a call you invoke `call` method on your client.\n- to receive a call you implement a callback function with client\'s `register`.\n- to return a result you pass a result object to callback function in `register`.\n\n###client.call(name[,params][,options][,callback])\n\nMakes a call with specified `params` and `options`. If there is a callback registered in the system the `callback` with a result will be returned.\n\n- `name`: name of the call that should be invoked remotely.\n- `params`: parameters of the call that will be passed to the remote consumer.\n- `options`: options that define the behaviour (like roles and routes) of the call. Allow to customize the call and \n- `callback`: callback function that will be invoked when the remote consumer replies with a result.\n\nHere is an example of `client.call` usage:\n\n```javascript\nsender.call(\'getRandomNumber\', {}, {}, function(result){\n    console.log(result);\n});\n```\n\n###client.register(name[, callback])\n\nRegisters an RPC by a specified `name`. You can return a result object to the sender by calling `callback`.\n\n- `name`: name of the call that the client should reply to.\n- `callback`: function that could be called in if you want to reply with a result.\n\nHere is an example of `client.register` that can listen to the `call` sent in the previous example (`getRandomNumber`):\n\n```javascript\nclient.register(\'getRandomNumber\', function (params, response) {\n    var number = Math.random();\n\n    response(number);\n});\n```\n##Example: Random Number\n\nThis example show a simple set up that allows to request a random number from a remote application.\n\n###Server\n\n```javascript\nvar RPC = require(\'rpc-amqp\');\nvar client = RPC.create();\n\nclient.on(\'ready\', function() {\n    client.register(\'getRandomNumber\', function (params, response) {\n        var number = Math.random();\n    \n        response(number);\n    });\n});\n```\n\n###Client\n\n```javascript\nvar RPC = require(\'rpc-amqp\');\nvar client = RPC.create();\n\nclient.on(\'ready\', function() {\n    sender.call(\'getRandomNumber\', {}, {}, function(result){\n        console.log(result);\n    });\n});\n```\n',
28 silly publish   readmeFilename: 'README.md',
28 silly publish   gitHead: '22f09d30f5a512c005dc895bb64443ce5ba5c0b8',
28 silly publish   _id: 'rpc-amqp@0.0.4',
28 silly publish   _shasum: '068348b876b81bb9e44ff596d945af4684f400d0',
28 silly publish   _from: '.' }
29 error need auth auth and email required for publishing
29 error need auth You need to authorize this machine using `npm adduser`
30 error System Darwin 15.3.0
31 error command "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
32 error cwd /Users/mexxik/Documents/projects/rpc-amqp
33 error node -v v0.10.36
34 error npm -v 1.4.28
35 error code ENEEDAUTH
36 verbose exit [ 1, true ]
